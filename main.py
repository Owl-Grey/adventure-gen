# -*- coding: utf8 -*-

from random import randint,random,choice
from russian_names import RussianNames
from kivy.app import App
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.button import ButtonBehavior
from kivy.uix.togglebutton import ToggleButton, ToggleButtonBehavior
from kivy.core.window import Window
from kivy.uix.scrollview import ScrollView
from kivy.uix.gridlayout import GridLayout
from kivy.uix.tabbedpanel import TabbedPanel
from kivy.properties import StringProperty, ObjectProperty
from kivy.uix.popup import Popup
from kivy.lang import Builder



temp = ["Флегматик","Сангвинник","Меланхолик","Холерик"]
aug = [["Протезирование","Порт для подключения", "Железный кулак","Стабилизатор клинка","Баллистический стабилизатор","Скрытый клинок","Дополнительный огнестрел в руках","Мышечный стабилизатор","Мышечный парализатор","Проект «Восхождение»","Фонарь","Проект «Паук»","Разрыватель материи","Укротитель замков","Помощник хирурга"],
["Глазные импланты","Вероятностный компьютер","Проект «Альманах»","Тактический анализатор","Проект «Фрейд»","Гоночный сопроцессор","Церебральный ускоритель","Проект «Адреналин»","Проект «Смотритель»","Проект «Пацифист»","Проект «Блэкаут»" ,"Удаленный доступ" ,"Удаленный доступ v1.2" ,"Проект «Марионетка»" ,"Баллистический компьютер" ,"Локальный криптободборщик" ,"Проект «Фрейд» v1.2" ,"Проект «Просвет»" ,"Проект «Ночь»" ,"Проект «След»" ,"Змеиный укус","Проект «Змея»"],
["Протезирование ","Проект «Скороход» ","Попрыгунчик" ,"Падение ангела ","Проект «Мгновение»" ,"Проект «Тихоход» ","Сканер приближения ","Проект «Повелитель» ","Скрытый клинок","Проект «Шагоход» ","Проект «Восхождение» доп. модуль","Генератор феромонов" ],
["Проект «Искра»","Радиоактивный протектор","Молниеотвод","Огнетушитель","Высокий иммунитет","Проект «Второй шанс»","Проект «Защитник»","Адреналиновый контроллер","Проект «Икар» ","Функциональный расширитель","Проект «Перехват»","Второе дыхание","Проект «Хамелеон","Активный камуфляж ","Видеокамера ","Око за око","Проект «Кокон»"]]
characters=["Храбрый","Спокойствие","Целомудренный","Прилежный","Непостоянный","Прощение","Щедрый","Общительный","Честный","Скромный","Терпеливый","Умеренный","Ревностный","Сострадательный","Гневный","Похотливый","Честолюбивый","Ленивый","Упрямый","Жадный","Застенчивый","Лживый","Высокомерный","Произвольный","Нетерпеливый","Прожорливый","Параноик","Циничный","Бездушный","Садистский"]
navs=["Холодное оружие","Огнестрельное оружие","Ближний бой"]
all_navs=["Медицина","Инженерия","БиоИнженерия","Программирование","Поиск","Физиогномика","Социальное взаимодействие","Химия","Взлом техники","Изучение","Выживание","Разрушение","Переноска тяжестей","Запугивание","Взрывчатка","Скалолазание","Оглушение","Брутальность","Стойкость","Биохимия","Ремонт","Управление транспортом","Вскрытие замков","Маскировка","Воровство","Слежка","Изобразительное искусство","Танцы","Координация","Мастерство"]
pr_arr=["hello"]
gun_corps=["ЛЕтс-ГО","Армада","European Guns"]
gun_list=["Пистолет","Дробовик","Винтовка","Автомат","Гранатомет","Пулемет","Шокер","Шприцемет"]
mellee_list=["Нож","Катана","Бита","Дилдо"]
sus=["год","человек","время","дело","жизнь","день","рука","раз","работа","слово","место","лицо","друг","глаз","вопрос","дом","сторона","страна","мир","случай","голова","ребенок","сила","конец","вид","система","часть","город","отношение","женщина","деньги","земля","машина","вода","отец","проблема","час","право","нога","решение","дверь","образ","история","власть","закон","война","бог","голос","тысяча","книга","возможность","результат","ночь","стол","имя","область","статья","число","компания","народ","жена","группа","развитие","процесс","суд","условие","средство","начало","свет","пора","путь","душа","уровень","форма","связь","минута","улица","вечер","качество","мысль","дорога","мать","действие","месяц","государство","язык","любовь","взгляд","мама","век","школа","цель","общество","деятельность","организация","президент","комната","порядок","момент","театр","письмо","утро","помощь","ситуация","роль","рубль","смысл","состояние","квартира","орган","внимание","тело","труд","сын","мера","смерть","рынок","программа","задача","предприятие","окно","разговор","правительство","семья","производство","информация","положение","центр","ответ","муж","автор","стена","интерес","федерация","правило","управление","мужчина","идея","партия","совет","счет","сердце","движение","вещь","материал","неделя","чувство","глава","наука","ряд","газета","причина","плечо","цена","план","речь","точка","основа","товарищ","культура","данные","мнение","документ","институт","ход","проект","встреча","директор","срок","палец","опыт","служба","судьба","девушка","очередь","лес","состав","член","количество","событие","объект","зал","создание","значение","период","шаг","брат","искусство","структура","номер","пример","исследование","гражданин","игра","начальник","рост","тема","принцип","метод","тип","фильм","край","гость","воздух","характер","борьба","использование","размер","образование","мальчик","кровь","район","небо","армия","класс","представитель","участие","девочка","политика","герой","картина","доллар","спина","территория","пол","поле","изменение","направление","рисунок","течение","церковь","банк","сцена","население","большинство","музыка","правда","свобода","память","команда","союз","врач","договор","дерево","факт","хозяин","природа","угол","телефон","позиция","двор","писатель","самолет","объем","род","солнце","вера","берег","спектакль","фирма","способ","завод","цвет","журнал","руководитель","специалист","оценка","регион","песня","процент","родитель","море","требование","основание","половина","роман","круг","анализ","стихи","автомобиль","экономика","литература","бумага","поэт","степень","господин","надежда","предмет","вариант","министр","граница","дух","модель","операция","пара","сон","название","ум","повод","старик","миллион","успех","счастье","ребята","кабинет","магазин","пространство","выход","удар","база","знание","текст","защита","руководство","площадь","сознание","возраст","участник","участок","пункт","линия","желание","папа","доктор","губа","дочь","среда","председатель","представление","солдат","художник","волос","оружие","соответствие","ветер","парень","зрение","генерал","огонь","понятие","строительство","ухо","грудь","нос","страх","услуга","содержание","радость","безопасность","продукт","комплекс","бизнес","сад","сотрудник","лето","курс","предложение","рот","технология","реформа","отсутствие","собака","камень","будущее","рассказ","контроль","река","продукция","сумма","техника","здание","сфера","необходимость","фонд","подготовка","лист","республика","хозяйство","воля","бюджет","снег","деревня","мужик","элемент","обстоятельство","немец","победа","источник","звезда","выбор","масса","итог","сестра","практика","проведение","карман","слава","кухня","определение","функция","войско","комиссия","применение","капитан","работник","обеспечение","офицер","фамилия","предел","выборы","ученый","бутылка","бой","теория","зона","отдел","зуб","разработка","личность","гора","товар","метр","праздник","влияние","читатель","удовольствие","актер","слеза","ответственность","учитель","акт","боль","множество","особенность","показатель","корабль","звук","впечатление","частность","детство","вывод","профессор","доля","норма","прошлое","командир","коридор","поддержка","рамка","враг","этап","черт","дед","собрание","прием","болезнь","клетка","кожа","заявление","попытка","сравнение","расчет","депутат","комитет","знак","дядя","учет","хлеб","чай","режим","целое","вирус","выражение","здоровье","зима","десяток","глубина","сеть","студент","секунда","скорость","поиск","суть","налог","ошибка","доход","режиссер","поверхность","ощущение","карта","клуб","станция","революция","колено","министерство","стекло","этаж","высота","бабушка","трубка","газ","мастер","поведение","столица","механизм","передача","способность","подход","энергия","существование","исполнение","кино","сожаление","заместитель","ресурс","акция","рождение","администрация","стоимость","улыбка","артист","сосед","фраза","фигура","субъект","реакция","список","фотография","журналист","май","нарушение","заседание","толпа","больница","существо","свойство","долг","поколение","животное","схема","усилие","отличие","остров","противник","волна","реализация","страница","формирование","житель","красота","птица","растение","тень","явление","храм","запах","водка","наличие","ужас","одежда","кресло","больной","поезд","университет","традиция","адрес","декабрь","ладонь","сведение","цветок","лидер","октябрь","занятие","сентябрь","помещение","январь","зритель","редакция","стиль","весна","фактор","август","известие","зависимость","охрана","оборудование","концерт","отделение","расход","выставка","милиция","переход","эпоха","запад","произведение","родина","собственность","тайна","трава","лагерь","имущество","кровать","аппарат","середина","март","клиент","дама","фронт","отрасль","стул","беседа","законодательство","продажа","повышение","музей","след","полковник","сомнение","понимание","апрель","князь","рыба","дума","кодекс","сутки","чудо","шея","судья","крыша","настроение","поток","должность","преступление","мозг","честь","пост","еврей","июнь","сотня","дождь","лестница","дача","установка","появление","получение","образец","труба","главное","осень","костюм","баба","ценность","обязанность","пьеса","таблица","вино","воспоминание","лошадь","коллега","организм","ученик","учреждение","открытие","том","черта","характеристика","выполнение","оборона","выступление","температура","перспектива","подруга","приказ","жертва","ресторан","километр","спор","вкус","признак","промышленность","американец","лоб","заключение","восток","исключение","ключ","постановление","слой","бок","июль","перевод","секретарь","кусок","слух","польза","звонок","обстановка","чиновник","соглашение","деталь","русский","тишина","зарплата","билет","подарок","тюрьма","ящик","конкурс","книжка","изучение","просьба","царь","публика","смех","сообщение","угроза","беда","блок","достижение","назначение","реклама","портрет","масло","стакан","урок","часы","крик","творчество","телевизор","инструмент","концепция","лейтенант","экран","дно","реальность","канал","мясо","знакомый","щека","конфликт","переговоры","запись","вагон","площадка","последствие","сотрудничество","зеркало","тон","академия","палата","потребность","ноябрь","увеличение","дурак","поездка","обед","потеря","февраль","мероприятие","парк","принятие","устройство","вещество","категория","сезон","гостиница","издание","объединение","темнота","человечество","колесо","опасность","разрешение","воздействие","коллектив","камера","запас","следствие","длина","крыло","округ","фон","кандидат","родственник","давление","присутствие","взаимодействие","доска","партнер","двигатель","шум","достоинство","грех","нож","полет","страсть","испытание","TRUE","оплата","разница","водитель","пакет","снижение","формула","живот","капитал","мост","новость","эффект","вход","губернатор","доклад","смена","убийство","эксперт","автобус","платье","кадр","тетя","общение","психология","лев","порог","проверка","процедура","рабочий","ремонт","обращение","обучение","ожидание","памятник","корень","наблюдение","буква","доказательство","признание","постель","штаб","владелец","компьютер","инженер","старуха","лодка","ракета","серия","шутка","вершина","выпуск","кулак","лед","торговля","нефть","молодежь","цифра","корпус","недостаток","сапог","сущность","талант","эффективность","кофе","полоса","основное","рассмотрение","сбор","штат","следователь","жилье","мешок","описание","куст","отказ","замок","редактор","дворец","забота","пиво","диван","столик","эксперимент","печать","кольцо","пистолет","воспитание","начальство","профессия","ворота","добро","дружба","покой","риск","окончание","дым","брак","величина","записка","инициатива","совесть","активность","кость","спорт","кредит","господь","майор","конференция","потолок","библиотека","помощник","конструкция","отдых","ручка","металл","молоко","прокурор","транспорт","поэзия","соединение","краска","расстояние","мечта","село","еда","зло","подразделение","сюжет","рубеж","сигнал","атмосфера","крест","вес","взрыв","контакт","сигарета","восторг","золото","почва","премия","король","подъезд","шанс","автомат","заказ","мальчишка","очки","миг","штука","чтение","поселок","свидетель","ставка","сумка","удивление","хвост","песок","поворот","возвращение","мгновение","статус","озеро","строй","параметр","сказка","тенденция","вина","дыхание","версия","масштаб","монастырь","хозяйка","дочка","танец","эксплуатация","коммунист","пенсия","приятель","объяснение","набор","производитель","пыль","философия","мощность","обязательство","уход","горло","кризис","указание","плата","яблоко","препарат","действительность","москвич","остаток","изображение","сделка","сочинение","покупатель","танк","затрата","строка","единица","обработка","чемпионат"]
pril=["абсолютный","адский","азартный","активный","ангельский","антагонистический","арктический","астрономический","баснословный","безапелляционный","безбожный","безбрежный","безвозвратный","безграничный","бездонный","бездушный","безжалостный","беззаветный","беззастенчивый","безмерный","безмятежный","безнадежный","безоговорочный","безотлагательный","безраздельный","безрассудный","безропотный","безудержный","безукоризненный","безумный","безупречный","безусловный","безустанный","безутешный","безысходный","белоснежный","бескомпромиссный","бесконечный","беспардонный","бесповоротный","беспощадный","беспредельный","беспрекословный","беспрецедентный","беспримерный","беспробудный","беспроглядный","беспросветный","беспросыпный","бессовестный","бесстыдный","бесценный","бесчеловечный","бесчисленный","бесшабашный","бешеный","блестящий","богатый","богатырский","большой","буйный","бурный","варварский","великий","величайший","веский","весомый","внушительный","возмутительный","волчий","вопиющий","восторженный","впечатляющий","всемерный","всепоглощающий","всесильный","всесторонний","всяческий","выдающийся","вылитый","высокий","высший","галопирующий","гибельный","гигантский","глубокий","глубочайший","глухой","головокружительный","гомерический","горький","горючий","горячий","грандиозный","гробовой","грозный","громадный","громкий","громоподобный","грубый","густой","диаметральный","дивный","дикий","добрый","доскональный","дотошный","дремучий","душераздирающий","дьявольский","жаркий","жгучий","железный","жесткий","жестокий","жесточайший","живой","животный","жизненный","жуткий","завзятый","завидный","закадычный","заклятый","законченный","закоренелый","замечательно","замечательный","записной","запредельный","заядлый","звериный","зверский","зеленый","злой","злостный","значительный","идеальный","излишний","изрядный","изуверский","изумительный","исключительный","исполинский","исступленный","истинно","истинный","истовый","истошный","исчерпывающий","каменный","кардинальный","катастрофический","категорический","клятвенный","колоссальный","коренной","космический","крайний","крепкий","кристальный","кричащий","кровный","кромешный","круглый","крупный","крутой","леденящий","лошадиный","лютый","максимальный","массовый","маститый","матерый","махровый","мертвенный","мертвецкий","мертвый","мировой","могильный","могучий","молниеносный","мощный","мучительный","набитый","наглый","наглядный","надежный","надрывный","наибольший","наивысший","нарочитый","настоятельный","настоящий","насущный","небывалый","невероятный","невиданный","невозможный","невообразимый","невосполнимый","невыносимый","невыразимый","недопустимый","недосягаемый","недюжинный","незабываемый","незаурядный","неземной","неизбывный","неизмеримый","неимоверный","неиссякаемый","неистовый","неистощимый","неистребимый","неисходный","неисчерпаемый","неисчислимый","немаловажный","немалый","немилосердный","немой","немыслимый","ненасытный","необоримый","необузданный","необыкновенный","необычайный","неограниченный","неодолимый","неописуемый","неопровержимый","неоспоримый","неотразимый","неоценимый","непередаваемый","непереносимый","непобедимый","неповторимый","непогрешимый","неподдельный","непоколебимый","непомерный","непоправимый","непостижимый","непревзойденный","непреоборимый","непреодолимый","непререкаемый","непримиримый","непробиваемый","непробудный","непроглядный","непролазный","непроходимый","неразрывный","нерасторжимый","несгибаемый","несказанный","неслыханный","несметный","несмолкаемый","несмываемый","несокрушимый","несравненный","нестерпимый","несусветный","неудержимый","неуемный","неуклонный","неукоснительный","неукротимый","неумеренный","неустанный","неусыпный","неутешный","неутолимый","неутомимый","нечеловеческий","нешуточный","нещадный","обильный","обложной","образцовый","оглушительный","огромный","ожесточенный","олимпийский","ослепительный","ослиный","основательный","остервенелый","острый","отборный","откровенный","открытый","отличный","отменный","отпетый","отчаянный","отъявленный","ошеломляющий","панический","патологический","первейший","первоклассный","первый","пламенный","плотный","площадной","повальный","поголовный","подавляющий","подлинный","подчеркнутый","полнейший","полный","поразительный","порядочный","последний","потрясающий","предельный","преклонный","преступный","приличный","принципиальный","прирожденный","прожженный","проливной","пронзительный","пронизывающий","прямой","пущий","пьянящий","рабский","радикальный","разгромный","раздирающий","разительный","разящий","райский","ревностный","революционный","редкий","редкостный","резкий","рекордный","решительный","рьяный","сатанинский","сверхчеловеческий","сверхъестественный","свинцовый","свирепый","седой","сердитый","серьезный","сильный","сказочно","сказочный","слепой","смертельный","смертный","сногсшибательный","собачий","совершеннейший","совершенный","сокрушительный","солидный","сплошной","стальной","стоический","стойкий","стопроцентный","страстный","страшный","строгий","строжайший","сумасшедший","суровый","существенный","сущий","твердый","телячий","титанический","тотальный","трескучий","триумфальный","тяжелый","тяжкий","убедительный","убежденный","убийственный","уважительный","удивительный","ужасающий","ужасный","умопомрачительный","уничтожающий","фанатический","фанатичный","фантастический","феноменальный","филигранный","форменный","фундаментальный","хороший","царский","цепенящий","черный","чертов","чертовский","чистый","чрезвычайный","чрезмерный","чудовищный","широкий","широкомасштабный","шквальный","штормовой","шумный","щедрый","щемящий","экстраординарный","экстремальный","ювелирный","ядреный","яркий","яростный","ярый"]
pril_ch=["Поношенный","Форменный","Мешковатый","Набедренный","Расшитый","Траурный","Меховой","Добротный","Штатский","Модный","Рваный","Монашеский","Шерстяной","Опрятный","Нарядный","Хлопчатобумажный","Повседневный","Льняной","Мокрый","Одетый","Холщовый","Полотняный","штатскый","сменный","поношенный","мешковатый","неброский","модный","домотканый","добротный","потрепанный","измятый","полувоенный","нарядный","стильный","помятый","запасный","драный","рваный","несвежий","ветхий","сложенный","готовый","мятый","практичный","неопрятный","снятый","монашеский","праздничный","нищенский","мокрый","старомодный","выходный","неподходящий","фирменный","потёртый","гражданский","разноцветный","невзрачный","элегантный","траурный","рабочий","маскировочный","меховый","броский","верхняя","грязный","матросский","тёплый","приличный","подходящый","вызывающый","повседневный","неприметный","пятнистый","крестьянский","полотняный","полосатый","дамский","будничный","походный","шерстяный","спортивный","испорченный","ковбойский","разнообразный","дорожный","пурпурный","всевозможный","удобный","защитный","парадный","пёстрый","одинаковый","цветастый","бесформенный","убогий","холщовый","непривычный","традиционный","синтетический","громоздкий","летний","остальный","джинсовый","диковинный","суконный","неудобный","ненужный","камуфляжный","богатый","тренировочный","изысканный","домашний","скромный","уличный","кожаный"]
сhmot=[["Рабочий комбинезон","Походный костюм","Деловой костюм","Спортивный костюм","Обноски","Почтальонский костюм","Панковские обноски","Платье"],["Кожаная курка байкера","Лабораторный халат","Майка","Рубашка","Свитер","Обычная куртка","Плащ","Майка-алкоголичка","Топ","Жилетка","Ветровка","Пуховик","Пиджак","Кардиган","Поло","Сарафан","Пижама","Туника","Пальто","Китель "]]
armor=["Бандитский набор","Набор Служителя закона","Военный набор","Гражданский набор","Джентльменский набор"]
pril_armor=["Металлический","Тканевый","Кожанный","Пластсталевый","Пластиковый","Мусорный"]
chmot_corps=["Новая Готика","Забытая планета","Ахмедас","аХАЙё"]
colors=["Красный","Оранжевый","Желтый","Зеленый","Голубой","Синий","Фиолетовый","Коричневый","Черный","Белый","Леопардовый","Пятнистый","Дырявый","Лазурный","Лимонный","Кремовый","Ореховый","Кофейный","Розовый","Лиловый","Радужный","Лаймовый","Лососевый","Горчичный","Мандариновый","Малиновый","Медный","Оливковый","Одуванчиковый","Неоновый"]
wear=[]
arm=[]
guns=[]
mel=[]
weap=[[],[],[],[],[],[],[],[],[],[],[],[]]
equip=[[],[]]

class Pop(Popup):
    title = StringProperty()

    def __init__(self, title, **kwargs):
        super(Pop, self).__init__(**kwargs)
        self.set_description(title)

    def set_description(self, title):
        if title == "Броня":
            strx=""
            k=0
            for j in equip[1]:

                k=k+1
                strx+=str(k)+". "+j+"\n"
            self.list.text=str(strx)
        elif title == "Одежда":
            strx=""
            k=0
            for j in equip[0]:

                k=k+1
                strx+=str(k)+". "+j+"\n"
            self.list.text=str(strx)
        else:
            i=int(title)
            x="Оружие"
            self.title = x
            strx=""
            k=0
            for j in weap[i]:

                k=k+1
                strx+=str(k)+". "+j+"\n"
            self.list.text=str(strx)




############################################
# class InsPanel(TabbedPanel):
#
#     def clk(self,instance_toggle_button):
#         instance_toggle_button.state="normal"
#         popup = Pop(str(instance_toggle_button.group))
#         popup.open()
#     def chp(self):
#         x=random()
#         y=random()
#         z=random()
#         pw=x/(x+y+z)*15
#         itl=y/(x+y+z)*15
#         ag=z/(x+y+z)*15
#         pw=round(pw)+1
#         itl=round(itl)+1
#         ag=round(ag)+1
#         return pw, itl, ag
#     def try_a(self,a,b,c):
#         if a>b:
#             if a>c:
#                 return 1
#             else:
#                 return 3
#         elif b>c:
#             return 2
#         elif c>b and c>a:
#             return 3
#         else:
#             return 2
#     def navs(self,hr):
#         nav=""
#         if hr<3:
#             x=randint(1,2)
#             cold=x
#             x=randint(1,2)
#             gun=x
#             x=randint(1,2)
#             hand=x
#             l=self.try_a(cold,gun,hand)
#             if l==1:
#                 m=randint(0,len(mel)-1)
#                 weap=str(mel[m])
#             elif l==2:
#                 m=randint(0,len(guns)-1)
#                 weap=str(guns[m])
#             elif l==3:
#                 weap="Кастет "+str(choice(["Плохой: 1d8*2","Хороший: 1d10*2","Отличный: 1d12*2"])) + str(randint(1,20))
#         elif hr==3:
#             x=randint(1,3)
#             cold=x
#             x=randint(1,3)
#             gun=x
#             x=randint(1,3)
#             hand=x
#             l=self.try_a(cold,gun,hand)
#             if l==1:
#                 m=randint(0,len(mel)-1)
#                 weap=str(mel[m])
#             elif l==2:
#                 m=randint(0,len(guns)-1)
#                 weap=str(guns[m])
#             elif l==3:
#                 weap="Кастет "+str(choice(["Плохой: 1d8*2","Хороший: 1d10*2","Отличный: 1d12*2"])) + str(randint(10,30))
#         elif hr>3 and hr<6:
#             x=randint(1,5)
#             cold=x
#             x=randint(1,5)
#             gun=x
#             x=randint(1,5)
#             hand=x
#             l=self.try_a(cold,gun,hand)
#             if l==1:
#                 m=randint(0,len(mel)-1)
#                 weap=str(mel[m])
#             elif l==2:
#                 m=randint(0,len(guns)-1)
#                 weap=str(guns[m])
#             elif l==3:
#                 weap="Кастет "+str(choice(["Плохой: 1d8*2","Хороший: 1d10*2","Отличный: 1d12*2"])) + str(randint(10,30))
#         elif hr==6:
#             x=randint(3,5)
#             cold=x
#             x=randint(3,5)
#             gun=x
#             x=randint(3,5)
#             hand=x
#             l=self.try_a(cold,gun,hand)
#             if l==1:
#                 m=randint(0,len(mel)-1)
#                 weap=str(mel[m])+"+"+str(randint(10,30))
#             elif l==2:
#                 m=randint(0,len(guns)-1)
#                 weap=str(guns[m])+"+"+str(randint(10,30))
#             elif l==3:
#                 weap="Кастет "+str(choice(["Плохой: 1d8*2","Хороший: 1d10*2","Отличный: 1d12*2"])) + str(randint(10,30))
#         return cold, gun, hand, weap
#     def aug(self,hr):
#         augp=""
#         if hr<3:
#             numb=randint(0,1)
#         elif hr==3:
#             numb=randint(1,2)
#         elif hr>3 and hr<6:
#             numb=randint(2,4)
#         elif hr==6:
#             numb=randint(6,7)
#         if numb == 0:
#             augp+="Не найдены"
#         else:
#
#             for i in range(numb):
#                 part=randint(0, len(aug)-1)
#                 if part == 0:
#                     name = "\n   Руки: "
#                 elif part == 1:
#                     name="\n   Голова: "
#                 elif part == 2:
#                     name="\n   Ноги: "
#                 elif part == 3:
#                     name="\n   Тело: "
#                 aug_i=randint(0, len(aug[part])-1)
#                 augp+= str(name) + str(aug[part][aug_i])
#         return augp
#     def ez(self):
#         numb=randint(1,2)
#         for i in range(numb):
#             pr=[]
#             ch=self.chp()
#             nav=self.navs(1)
#             augp=self.aug(1)
#             mn=wear[randint(1,len(wear)-1)]
#             pr.append(ch)
#             pr.append(nav)
#             pr.append(augp)
#             pr.append(mn)
#             pr_arr.append(pr)
#             self.ids.grd1.add_widget(
#                 ToggleButton(
#                     text=f'Противник {i+1}',
#                     group=i,
#                     on_press=self.clk,
#                     size_hint_y=None,
#                     height=150,
#                     state='normal'
#                 )
#             )
#     def light(self):
#         numb=randint(1,3)
#         for i in range(numb):
#             pr=[]
#             ch=self.chp()
#             nav=self.navs(2)
#             augp=self.aug(2)
#             mn=wear[randint(1,len(wear)-1)]
#             pr.append(ch)
#             pr.append(nav)
#             pr.append(augp)
#             pr.append(mn)
#             pr_arr.append(pr)
#             self.ids.grd1.add_widget(
#                 ToggleButton(
#                     text=f'Противник {i+1}',
#                     group=i,
#                     on_press=self.clk,
#                     size_hint_y=None,
#                     height=150,
#                     state='normal'
#                 )
#             )
#     def norm(self):
#         numb=randint(1,4)
#         for i in range(numb):
#             pr=[]
#             ch=self.chp()
#             nav=self.navs(3)
#             augp=self.aug(3)
#             mn=wear[randint(1,len(wear)-1)]
#             pr.append(ch)
#             pr.append(nav)
#             pr.append(augp)
#             pr.append(mn)
#             pr_arr.append(pr)
#             self.ids.grd1.add_widget(
#                 ToggleButton(
#                     text=f'Противник {i+1}',
#                     group=i,
#                     on_press=self.clk,
#                     size_hint_y=None,
#                     height=150,
#                     state='normal'
#                 )
#             )
#     def hard(self):
#         numb=randint(1,4)
#         for i in range(numb):
#             pr=[]
#             ch=self.chp()
#             nav=self.navs(4)
#             augp=self.aug(4)
#             mn=wear[randint(1,len(wear)-1)]
#             pr.append(ch)
#             pr.append(nav)
#             pr.append(augp)
#             pr.append(mn)
#             pr_arr.append(pr)
#             self.ids.grd1.add_widget(
#                 ToggleButton(
#                     text=f'Противник {i+1}',
#                     group=i,
#                     on_press=self.clk,
#                     size_hint_y=None,
#                     height=150,
#                     state='normal'
#                 )
#             )
#     def imp(self):
#         numb=randint(1,5)
#         for i in range(numb):
#             pr=[]
#             ch=self.chp()
#             nav=self.navs(5)
#             augp=self.aug(5)
#             mn=wear[randint(1,len(wear)-1)]
#             pr.append(ch)
#             pr.append(nav)
#             pr.append(augp)
#             pr.append(mn)
#             pr_arr.append(pr)
#             self.ids.grd1.add_widget(
#                 ToggleButton(
#                     text=f'Противник {i+1}',
#                     group=i,
#                     on_press=self.clk,
#                     size_hint_y=None,
#                     height=150,
#                     state='normal'
#                 )
#             )
#     def boss(self):
#         self.ids.bs.clear_widgets()
#         pr_arr.clear()
#         numb=1
#         for i in range(numb):
#             pr=[]
#             ch=self.chp()
#             nav=self.navs(6)
#             augp=self.aug(6)
#             name=pril[randint(1,len(pril)-1)]
#             mn=wear[randint(1,len(wear)-1)]
#             pr.append(ch)
#             pr.append(nav)
#             pr.append(augp)
#             pr.append(mn)
#             pr.append(name)
#             pr_arr.append(pr)
#             print(pr_arr)
#             self.ids.bs.add_widget(
#                 ToggleButton(
#                     text=f'Босс',
#                     group=i,
#                     on_press=self.clk,
#                     size_hint_y=None,
#                     height=150,
#                     state='normal'
#                 )
#             )
#     def genp(self, l):
#         self.ids.grd1.clear_widgets()
#         pr_arr.clear()
#         if l==1:
#             self.ez()
#         elif l==2:
#             self.light()
#         elif l==3:
#             self.norm()
#         elif l==4:
#             self.hard()
#         elif l==5:
#             self.imp()
###########################################
class Container(TabbedPanel):
    def clk(self,instance_toggle_button):
        instance_toggle_button.state="normal"
        popup = Pop(str(instance_toggle_button.group))
        popup.open()
    def get_guns(self, *args):
        ch=''
        guns.clear()
        for j in gun_list:
            if j =="Пистолет":
                ir=1
            elif j =="Дробовик":
                ir=2
            elif j =="Винтовка":
                ir=3
            elif j =="Автомат":
                ir=4
            elif j =="Гранатомет":
                ir=5
            elif j =="Пулемет":
                ir=6
            elif j =="Шприцемет":
                ir=7
            elif j == "Шокер":
                ir=8
            self.ids.guns.add_widget(
                ToggleButton(
                    text=str(j),
                    group=ir-1,
                    on_press=self.clk,
                    size_hint_y=None,
                    height=150,
                    state='normal'
                ))
            for i in range(25):
                ur=""
                if j =="Пистолет":
                    ur=str(choice(["Плохой: 1d8*2","Хороший: 1d10*2","Отличный: 1d12*2"]))
                    ur+="+" + str(randint(1,20))
                    ir=1
                elif j =="Дробовик":
                    ur=str(choice(["Плохой: 4d4*3","Хороший: 4d6*3","Отличный: 4d8*3"]))
                    ur+="+" + str(randint(1,20))
                    ir=2
                elif j =="Винтовка":
                    ur=str(choice(["Плохой: 2d12","Хороший: 2d20","Отличный: 3d20"]))
                    ur+="+" + str(randint(1,20))
                    ir=3
                elif j =="Автомат":
                    ur=str(choice(["Плохой: 1d6*2","Хороший: 1d8*2","Отличный: 1d10*2"]))
                    ur+="+" + str(randint(1,20))
                    ir=4
                elif j =="Гранатомет":
                    ur=str(choice(["Плохой: 1d100*2","Хороший: 2d100*2","Отличный: 3d100*2"]))
                    ur+="+" + str(randint(1,20))
                    ir=5
                elif j =="Пулемет":
                    ur=str(choice(["Плохой: 1d4*2","Хороший: 1d8*2","Отличный: 1d10*2"]))
                    ur+="+" + str(randint(1,20))
                    ir=6
                elif j =="Шприцемет":
                    ur=str(choice(["Плохой: 1d4","Хороший: 1d4","Отличный: 1d4"]))
                    ur+="+" + str(randint(1,20))
                    ir=7
                elif j == "Шокер":
                    ir=8

                l=""
                x=randint(0,len(gun_corps)-1)
                y=randint(0,len(pril)-1)
                z=randint(0,len(sus)-1)
                k=len(sus[z])
                m=len(pril[y])

                if x==1:
                    ren=randint(0,1)
                    if ren==1:
                        rn = RussianNames(count=1, patronymic=False,name=False).get_person()
                        ye=randint(1944,2040)
                        l= j + " " + str(gun_corps[x]) +' "'+str(rn)+" "+ str(ye)+'"'+"\n"+ ur
                    else:
                        if sus[z][k-1] == "а" or sus[z][k-1] == "ь" or sus[z][k-1] == "я":
                            lek=pril[y][0:m-2]
                            lek=str(lek)+"aя"
                            l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                        elif sus[z][k-1] == "е" or sus[z][k-1] == "о":
                            lek=pril[y][0:m-2]
                            lek=str(lek)+"ое"
                            l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                        elif sus[z][k-1] == "и":
                            lek=pril[y][0:m-2]
                            lek=str(lek)+"ие"
                            l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                        else:
                            l= j + " " + str(gun_corps[x]) + ' "' + str(pril[y]) + " " + str(sus[z]) + '"'+"\n"+ ur
                else:
                    if sus[z][k-1] == "а" or sus[z][k-1] == "ь" or sus[z][k-1] == "я":
                        lek=pril[y][0:m-2]
                        lek=str(lek)+"aя"
                        l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                    elif sus[z][k-1] == "е" or sus[z][k-1] == "о":
                        lek=pril[y][0:m-2]
                        lek=str(lek)+"ое"
                        l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                    elif sus[z][k-1] == "и":
                        lek=pril[y][0:m-2]
                        lek=str(lek)+"ие"
                        l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                    else:
                        l= j + " " + str(gun_corps[x]) + ' "' + str(pril[y]) + " " + str(sus[z]) + '"'+"\n"+ ur
                weap[ir-1].append(l)
                guns.append(l)
    def get_mellee(self, *args):
        ch=''
        mel.clear()
        for j in mellee_list:
            if j =="Нож":
                ir=9
            elif j =="Катана":
                ir=10
            elif j =="Бита":
                ir=11
            elif j =="Дилдо":
                ir=12
            self.ids.guns.add_widget(
                ToggleButton(
                    text=str(j),
                    group=ir-1,
                    on_press=self.clk,
                    size_hint_y=None,
                    height=150,
                    state='normal'
                ))
            for i in range(25):
                ur=""
                if j =="Нож":
                    ur=str(choice(["Плохой: 1d10*3","Хороший: 2d10*3","Отличный: 3d10*3"]))
                    ur+="+" + str(randint(1,20))
                    ir=9
                elif j =="Катана":
                    ur=str(choice(["Плохой: 1d12*3","Хороший: 2d12*3","Отличный: 3d12*3"]))
                    ur+="+" + str(randint(1,20))
                    ir=10
                elif j =="Бита":
                    ur=str(choice(["Плохой: 2d10","Хороший: 2d12","Отличный: 3d12"]))
                    ur+="+" + str(randint(1,20))
                    ir=11
                elif j =="Дилдо":
                    ur=str(choice(["Плохой: 1d8","Хороший: 2d8","Отличный: 2d8*2"]))
                    ur+="+" + str(randint(1,20))
                    ir=12
                l=""
                x=randint(0,len(gun_corps)-1)
                y=randint(0,len(pril)-1)
                z=randint(0,len(sus)-1)
                k=len(sus[z])
                m=len(pril[y])

                if x==1:
                    ren=randint(0,1)
                    if ren==1:
                        rn = RussianNames(count=1, patronymic=False,name=False).get_person()
                        ye=randint(1944,2040)
                        l= j + " " + str(gun_corps[x]) +' "'+str(rn)+" "+ str(ye)+'"'+"\n"+ ur
                    else:
                        if sus[z][k-1] == "а" or sus[z][k-1] == "ь" or sus[z][k-1] == "я":
                            lek=pril[y][0:m-2]
                            lek=str(lek)+"aя"
                            l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                        elif sus[z][k-1] == "е" or sus[z][k-1] == "о":
                            lek=pril[y][0:m-2]
                            lek=str(lek)+"ое"
                            l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                        elif sus[z][k-1] == "и":
                            lek=pril[y][0:m-2]
                            lek=str(lek)+"ие"
                            l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                        else:
                            l= j + " " + str(gun_corps[x]) + ' "' + str(pril[y]) + " " + str(sus[z]) + '"'+"\n"+ ur
                else:
                    if sus[z][k-1] == "а" or sus[z][k-1] == "ь" or sus[z][k-1] == "я":
                        lek=pril[y][0:m-2]
                        lek=str(lek)+"aя"
                        l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                    elif sus[z][k-1] == "е" or sus[z][k-1] == "о":
                        lek=pril[y][0:m-2]
                        lek=str(lek)+"ое"
                        l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                    elif sus[z][k-1] == "и":
                        lek=pril[y][0:m-2]
                        lek=str(lek)+"ие"
                        l= j + " " + str(gun_corps[x]) + ' "' + lek + " " + str(sus[z]) + '"'+"\n"+ ur
                    else:
                        l= j + " " + str(gun_corps[x]) + ' "' + str(pril[y]) + " " + str(sus[z]) + '"'+"\n"+ ur
                weap[ir-1].append(l)
                mel.append(l)
    def get_chmot(self, *args):
        wear.clear()
        self.ids.chmot.add_widget(
            ToggleButton(
                text="Одежда",
                group="Одежда",
                on_press=self.clk,
                size_hint_y=None,
                height=150,
                state='normal'
            ))
        for k in range(len(сhmot)):
            for j in сhmot[k]:
                for i in range(2):
                    l=""
                    x=randint(0,len(chmot_corps)-1)
                    y=randint(0,len(pril_ch)-1)
                    z=randint(0,len(colors)-1)
                    m=len(pril_ch[y])
                    n=len(colors[z])
                    o=len(j)
                    if j[o-1]== "а" or j[o-1] == "ь" or j[o-1] == "я":
                        lek=pril_ch[y][0:m-2]
                        lek2=colors[z][0:n-2]
                        lek2=str(lek2)+"ая"
                        lek=str(lek)+"aя"
                        l= lek2 + " " + lek + " " + j + "\nот " + str(chmot_corps[x])
                    elif j[o-1] == "е" or j[o-1] == "о":
                        lek=pril_ch[y][0:m-2]
                        lek2=colors[z][0:n-2]
                        lek2=str(lek2)+"ое"
                        lek=str(lek)+"ое"
                        l= lek2 + " " + lek + " " + j + "\nот " + str(chmot_corps[x])
                    elif j[o-1] == "и":
                        lek=pril_ch[y][0:m-2]
                        lek2=colors[z][0:n-2]
                        lek2=str(lek2)+"ые"
                        lek=str(lek)+"ые"
                        l= lek2 + " " + lek + " " + j + "\nот " + str(chmot_corps[x])
                    else:
                        l= colors[z] + " " + pril_ch[y] + " " + j + "\nот " + str(chmot_corps[x])
                    wear.append(l)
                    equip[0].append(l)
    def get_armor(self, *args):
        arm.clear()
        self.ids.chmot.add_widget(
            ToggleButton(
                text="Броня",
                group="Броня",
                on_press=self.clk,
                size_hint_y=None,
                height=150,
                state='normal'
            ))
        for j in armor:
            for i in range(10):
                l=""
                x=randint(0,len(gun_corps)-1)
                y=randint(0,len(pril_armor)-1)
                z=randint(0,len(colors)-1)
                l= colors[z] + " " + pril_armor[y] + " " + j + "\nот " + str(gun_corps[x])
                arm.append(l)
                equip[1].append(l)


    def getchmot(self, *args):
        # for i in range(12):
        #     weap[i].clear()
        self.get_chmot()
        self.get_armor()

    def getgun(self, *args):
        for i in range(12):
            weap[i].clear()
        self.get_guns()
        self.get_mellee()


    def rand_character(self):
        numb=randint(2,4)
        for i in range(numb):
            ch=randint(0, len(characters)-1)
            if i==0:
                self.char.text=str(characters[ch])
            else:
                self.char.text+="\n" + str(characters[ch])
    def rand_aug(self):
        numb=randint(0,3)
        if numb == 0:
            self.aug.text ="Имплантов не обнаружено"
        else:
            for i in range(numb):
                part=randint(0, len(aug)-1)
                if part == 0:
                    name = "Руки: "
                elif part == 1:
                    name="Голова: "
                elif part == 2:
                    name="Ноги: "
                elif part == 3:
                    name="Тело: "
                aug_i=randint(0, len(aug[part])-1)
                if i==0:
                    self.aug.text= str(name) + str(aug[part][aug_i])
                else:
                    self.aug.text+= "\n" + str(name) + str(aug[part][aug_i])
    def rand_ch(self):
        x=random()
        y=random()
        z=random()
        pw=x/(x+y+z)*15
        itl=y/(x+y+z)*15
        ag=z/(x+y+z)*15
        pw=round(pw)+1
        itl=round(itl)+1
        ag=round(ag)+1
        self.pw.text=str(pw)
        self.itl.text=str(itl)
        self.ag.text=str(ag)
    def rand_temp(self):
        temp_i=randint(0, len(temp)-1)
        self.temp.text = str(temp[temp_i])
    def rand_all_navs(self):
        ch=""
        for i in range(randint(1,5)):
            x=randint(0,len(all_navs)-1)
            ch+=str(all_navs[x])+": "+str(randint(1,5))+"\n"
            self.alls.text = ch
    def rand_guns(self):
        x=randint(1,2)
        if x==1:
            y=randint(0,len(guns)-1)
            self.weap.text = str(guns[y])
        elif x==2:
            y=randint(0,len(mel)-1)
            self.weap.text = str(mel[y])
    def rand_wear(self):
        y=randint(0,len(wear)-1)
        self.wear.text = str(wear[y])
    def rand_name(self):
        rn = RussianNames(count=1, patronymic=False).get_person()
        self.name.text = str(rn)
        self.ct.text="Имя"
    def gen(self, *args):
        self.rand_name()
        self.rand_temp()
        self.rand_ch()
        self.rand_character()
        self.rand_aug()
        self.rand_all_navs()
        self.rand_guns()
        self.rand_wear()
############################################
class MyApp(App):
    def build(self):
        return Container()
    # def on_start(self, *args):
    #     self.rand_guns()
    #     self.rand_mellee()
    #     self.rand_chmot()


if __name__ == "__main__":
	MyApp().run()
